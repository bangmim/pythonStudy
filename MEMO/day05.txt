day05
중첩 for문
반복문을 겹쳐서 사용하는 경우 N중 반복문이라고 한다

<구조>
for 변수 in range(start,end,step):
	for 변수 in range(start, end, step):
		반복하고 싶은 명령

-------------------------------------------------------------------
[함수] function
프로그래밍에서 함수는 반복적인 코드를 작성할 때 
이를 짧고 간편하게 사용하기 위해 사용한다.

프로그래밍에서의 함수와 수학에서의 함수는 차이가 있다.
- 수학에서의 함수 : input과 output 존재
- 프로그래밍에서의 함수 : input과 output 존재하지 않을 수도 있다.

프로그래밍 언어에서 함수는 두 가지 유형으로 구분할 수 있다.
-사전에 정의된 함수 (이미 만들어진 함수)
-사용자 정의 함수

사전에 정의된 함수는 여태까지 사용했던 내장함수가 있다.
-print(), input(), map() ...

[내장함수]
-abs(x) : x의 절대값 반환 
-round(x) : x의 소수점 다음에서 반올림한 값
-min(x) : 데이터 집합인 x의 최소값
-max(x) : 데이터 집합인 x의 최대값
-help(function) : 내장 함수 또는 사용자 정의 함수의 기능에 대한 설명을 출력

파라미터를 주면 어떻게 컴퓨터가 알아서 순서를 인식해서 넣어주는가?
1. print(1,2,3,sep='/') 이름을 직접적으로 적어서 전달해준다.

2. 순서를 지켜가면서 전달을 받는다. 함수를 정의할 때 파라미터를 받을
순서를 정해놨기 때문에 자리를 맞춰서 들어간다.

파라미터 개수가 많은 경우 파라미터 이름을 명시하여 값을 넣어주는 것이
실수할 확률이 적다.
info(name=, , , , ...)
--------------------------------------------------------------------------------
[사용자 정의 함수]
자신이 컴퓨터로 하여금 수행시키고 싶은 반복적인 동작이 있다면 함수를
직접 정의해서 만드는 것을 의미한다.

함수정의
def 함수명(파라미터()):    #f(x,y) = 2x+y (x, y 가 파라미터 (미지수))
	수행할 명령1
	수행할 명령2
	수행할 명령3

	return 결과값

함수의 동작 원리
-입력(파라미터) 및 함수 호출(call) -> 함수의 본체 수행 -> 결과 (리턴,return)

함수의 파라미터
-함수의 파라미터가 정해져 있는 경우, 파라미터에 맞게 값을 전달해야
 함수가 동작한다.
-함수의 파라미터 개수를 맞추지 않는 경우 TypeError가 발생한다.
-함수의 파라미터가 적혀있는 순서를 지키는 것도 중요하다. 
 지키지 않으면 논리적 오류가 발생할 수 있다.

함수명 사용규칙
기존 키워드 X : print, round, if, while 등 > 기존에 정의되어 있던 기능을
				  사용할 수 없게 된다.
첫글자 숫자 사용 X : 1print
-변수명 사용 규칙과 동일

파라미터나 리턴 값이 없는 경우
-파라미터가 없는 경우는 함수의 input이 없는 경우로 생각하면 된다.
-리턴값이 없는 경우는 함수의 output이 없는 경우로 생각하면 된다.
-리턴값이 없는 경우 사실 return None이 생략되어 있는 것이다.
---------------------------------------------------------------------------
리턴(return)

함수 내부에서 모든 작업이 이루어졌다면 return 생략 가능
함수 내부에서 작업이 끝나지 않았다면 return 생략 불가능

[지역변수 전역변수]
함수 바깥에서 사용하는 변수 : 전역변수 (global variable)
함수 내부에서 사용하는 변수 : 지역변수 (local variable)

전역변수의 경우 별도의 처리를 하지 않으면 함수 내부에서 사용할 수 없다.
지역변수 또한 함수 외부에서 사용할 수 없다.

----------------------------------------------------------------------------------
메서드
특정 객체가 가지고 있는 함수를 의미한다.
특정 자료형에 포함되어 있는 함수
함수와 메서드는 같은 개념이지만, 함수는 독립적으로 호출할 수 있고, 
메서드는 특정 객체를 통해서만 호출할 수 있다.

[문자열 메서드]
문자열도 슬라이싱 가능하다.

문자열 슬라이싱
-문자열이 인덱스 번호를 가지고 잇기 때문에
-인덱스는 번호를 통해서 자료를 검색, 삽입, 삭제, 수정 할 수 있다.
-인덱스는 0번부터 시작하고 (자료의 개수 -1)까지의 범위를 가지고 있다.

